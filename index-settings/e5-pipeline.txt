[
  {
    "script": {
      "lang": "painless",
      "source": """
      String[] envSplit = /((?<!M(r|s|rs)\.)(?<=\.) |(?<=\!) |(?<=\?) )/.split(ctx['article_content']);
          ctx['passages'] = new ArrayList();
          int i = 0;
          boolean remaining = true;
          if (envSplit.length == 0) {
            return
          } else if (envSplit.length == 1) {
            Map passage = ['text': envSplit[0]];ctx['passages'].add(passage)
          } else {
            while (remaining) {
              Map passage = ['text': envSplit[i++]];
              while (i < envSplit.length && passage.text.length() + envSplit[i].length() < params.model_limit) {passage.text = passage.text + ' ' + envSplit[i++]}
              if (i == envSplit.length) {remaining = false}
              ctx['passages'].add(passage)
            }
          }
      """
      "params": {
        "model_limit": 400
      }
    }
  },
  {
    "foreach": {
      "field": "passages",
      "processor": {
        "inference": {
          "model_id": ".multilingual-e5-small_linux-x86_64",
          "target_field": "_ingest._value.vector",
          "field_map": {
            "_ingest._value.text": "text_field"
          }
        }
      },
      "ignore_failure": true
    }
  },
  {
    "rename": {
      "field": "url_scheme",
      "target_field": "http.protocol"
    }
  },
  {
    "rename": {
      "field": "url_port",
      "target_field": "http.port"
    }
  },
  {
    "rename": {
      "field": "url_host",
      "target_field": "http.domain"
    }
  },
  {
    "rename": {
      "field": "url",
      "target_field": "http.url"
    }
  },
  {
    "remove": {
      "field": [
        "body_content",
        "additional_urls",
        "domains",
        "url_path",
        "url_path_dir1",
        "article_content"
      ]
    }
  }
]